import { type Order, type ShopifyStore, type FieldMapping, DASHBOARD_FIELDS } from "@/types"

export const mockOrders: Order[] = [
  {
    id: "1",
    deliveryOrderNo: "DO-2024-001",
    deliveryDate: "2024-01-15",
    processingDate: "2024-01-14",
    jobReleaseTime: "09:00",
    deliveryCompletionTimeWindow: "12:00-18:00",
    trackingNo: "TRK123456789",
    senderNumberOnApp: "+65 9123 4567",
    deliverySequence: "1",
    address: "123 Orchard Road, #12-34, Singapore",
    companyName: "Tech Solutions Pte Ltd",
    postalCode: "238858",
    firstName: "John",
    lastName: "Doe",
    recipientPhoneNo: "+65 9876 5432",
    senderPhoneNo: "+65 9123 4567",
    instructions: "Call before delivery",
    assignTo: "Driver A",
    emailsForNotifications: "john.doe@email.com",
    zone: "Central",
    accountNo: "ACC001",
    deliveryJobOwner: "Logistics Team",
    senderNameOnApp: "Tech Solutions",
    group: "Express",
    noOfShippingLabels: "1",
    attachmentUrl: "",
    status: "Ready for Export",
    podAt: "",
    remarks: "",
    itemCount: "2",
    serviceTime: "30 mins",
    sku: "LAPTOP-001",
    description: "Gaming Laptop",
    qty: "1",
  },
  {
    id: "2",
    deliveryOrderNo: "DO-2024-002",
    deliveryDate: "2024-01-15",
    processingDate: "2024-01-14",
    jobReleaseTime: "10:30",
    deliveryCompletionTimeWindow: "14:00-20:00",
    trackingNo: "TRK987654321",
    senderNumberOnApp: "+65 9234 5678",
    deliverySequence: "2",
    address: "456 Marina Bay Sands, Tower 2, #25-10, Singapore",
    companyName: "Fashion Hub Pte Ltd",
    postalCode: "018956",
    firstName: "Jane",
    lastName: "Smith",
    recipientPhoneNo: "+65 8765 4321",
    senderPhoneNo: "+65 9234 5678",
    instructions: "Leave at reception if not available",
    assignTo: "Driver B",
    emailsForNotifications: "jane.smith@email.com",
    zone: "Marina",
    accountNo: "ACC002",
    deliveryJobOwner: "Logistics Team",
    senderNameOnApp: "Fashion Hub",
    group: "Standard",
    noOfShippingLabels: "2",
    attachmentUrl: "",
    status: "Exported",
    podAt: "2024-01-15 16:30",
    remarks: "Delivered successfully",
    itemCount: "3",
    serviceTime: "15 mins",
    sku: "DRESS-002",
    description: "Summer Dress Collection",
    qty: "3",
  },
  {
    id: "3",
    deliveryOrderNo: "DO-2024-003",
    deliveryDate: "2024-01-16",
    processingDate: "2024-01-15",
    jobReleaseTime: "08:00",
    deliveryCompletionTimeWindow: "09:00-17:00",
    trackingNo: "TRK456789123",
    senderNumberOnApp: "+65 9345 6789",
    deliverySequence: "1",
    address: "789 Jurong East Street 32, #05-123, Singapore",
    companyName: "Home Essentials Pte Ltd",
    postalCode: "609477",
    firstName: "Michael",
    lastName: "Johnson",
    recipientPhoneNo: "+65 7654 3210",
    senderPhoneNo: "+65 9345 6789",
    instructions: "Fragile items - handle with care",
    assignTo: "Driver C",
    emailsForNotifications: "michael.johnson@email.com",
    zone: "West",
    accountNo: "ACC003",
    deliveryJobOwner: "Logistics Team",
    senderNameOnApp: "Home Essentials",
    group: "Fragile",
    noOfShippingLabels: "1",
    attachmentUrl: "",
    status: "Error",
    podAt: "",
    remarks: "Address not found - customer contacted",
    itemCount: "1",
    serviceTime: "45 mins",
    sku: "VASE-003",
    description: "Ceramic Vase Set",
    qty: "1",
  },
]

export const mockShopifyStores: ShopifyStore[] = [
  {
    id: "1",
    name: "Tech Solutions Store",
    url: "tech-solutions.myshopify.com",
    apiKey: "shpat_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    connected: true,
  },
  {
    id: "2",
    name: "Fashion Hub Store",
    url: "fashion-hub.myshopify.com",
    apiKey: "shpat_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy",
    connected: true,
  },
]

export const mockFieldMappings: FieldMapping[] = [
  {
    dashboardField: "deliveryOrderNo",
    shopifyFields: ["order.name"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "deliveryDate",
    shopifyFields: ["order.created_at"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "firstName",
    shopifyFields: ["shipping_address.first_name"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "lastName",
    shopifyFields: ["shipping_address.last_name"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "address",
    shopifyFields: [
      "shipping_address.address1",
      "shipping_address.address2",
      "shipping_address.city",
    ],
    separator: ", ",
    noMapping: false,
  },
  {
    dashboardField: "postalCode",
    shopifyFields: ["shipping_address.zip"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "recipientPhoneNo",
    shopifyFields: ["shipping_address.phone"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "companyName",
    shopifyFields: ["shipping_address.company"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "trackingNo",
    shopifyFields: ["order.tracking_number"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "sku",
    shopifyFields: ["line_items.sku"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "description",
    shopifyFields: ["line_items.title"],
    separator: "",
    noMapping: false,
  },
  {
    dashboardField: "qty",
    shopifyFields: ["line_items.quantity"],
    separator: "",
    noMapping: false,
  },
  // Fields with no mapping (will be empty by default)
  {
    dashboardField: "processingDate",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "jobReleaseTime",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "deliveryCompletionTimeWindow",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "senderNumberOnApp",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "deliverySequence",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "senderPhoneNo",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "instructions",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "assignTo",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "emailsForNotifications",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "zone",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "accountNo",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "deliveryJobOwner",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "senderNameOnApp",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "group",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "noOfShippingLabels",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "attachmentUrl",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "status",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "podAt",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "remarks",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "itemCount",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
  {
    dashboardField: "serviceTime",
    shopifyFields: [],
    separator: "",
    noMapping: true,
  },
]

// Initialize mock data in localStorage if not present
export const initializeMockData = () => {
  if (!localStorage.getItem("shopify-orders")) {
    localStorage.setItem("shopify-orders", JSON.stringify(mockOrders))
  }

  if (!localStorage.getItem("app-settings")) {
    const mockSettings = {
      shopifyStores: mockShopifyStores,
      fieldMappings: mockFieldMappings,
    }
    localStorage.setItem("app-settings", JSON.stringify(mockSettings))
  }
}
